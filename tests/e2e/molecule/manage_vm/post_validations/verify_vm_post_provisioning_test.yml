---
- name: Get info about the VM
  ansible.builtin.include_tasks:
    file: ../tasks/get_vm_info.yml
  vars:
    vm_name: "{{ item.provision_vm_name }}"

- name: Set vm_moid variable
  ansible.builtin.set_fact:
    vm_moid: "{{ vm_info.virtual_machines[0].moid }}"

- name: Collect information about VM with ID {{ vm_moid }}
  vmware.vmware_rest.vcenter_vm_info:
    vcenter_hostname: "{{ vcenter_hostname }}"
    vcenter_username: "{{ vcenter_username }}"
    vcenter_password: "{{ vcenter_password }}"
    vcenter_validate_certs: "{{ provision_vm_validate_certs }}"
    vm: "{{ vm_moid }}"
  register: vm_info_boot_type

- name: "Validate the properties of the following VM: {{ item.provision_vm_name }}"
  ansible.builtin.assert:
    that:
      - vm_info.virtual_machines[0].guest_name == item.provision_vm_name
      - vm_info.virtual_machines[0].cluster == provision_vm_cluster
      - vm_info.virtual_machines[0].datacenter == provision_vm_datacenter
      - vm_info.virtual_machines[0].folder == provision_vm_folder
      - vm_info.virtual_machines[0].power_state | lower == item.provision_vm_state
      - vm_info_boot_type.value.boot.type | lower == item.provision_vm_hardware.boot_firmware
      # - vm_info.virtual_machines[0].resource_pool == item.provision_vm_resource_pool

- name: "Validate the following VM datastore when datastore was defined in provision_vm_datastore: {{ item.provision_vm_name }}"
  ansible.builtin.assert:
    that:
      - vm_info.virtual_machines[0].datastore_url[0].name == item.provision_vm_datastore
  when: "'provision_vm_datastore' in item"

- name: "Validate the following VM datastore when datastore was defined in provision_vm_disk: {{ item.provision_vm_name }}"
  ansible.builtin.assert:
    that:
      - vm_info.virtual_machines[0].datastore_url[0].name == item.provision_vm_disk[0].datastore
  when: "'provision_vm_datastore' not in item"
